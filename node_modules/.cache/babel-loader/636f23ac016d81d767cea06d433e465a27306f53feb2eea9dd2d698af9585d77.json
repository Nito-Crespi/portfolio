{"ast":null,"code":"var _jsxFileName = \"D:\\\\Workspace\\\\React\\\\portfolio\\\\src\\\\components\\\\nito\\\\Nito.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RandomTextEffect = () => {\n  _s();\n  const originalText = \"nito\";\n  const [displayText, setDisplayText] = useState(\"----\");\n  const [index, setIndex] = useState(0);\n  const getSurroundingLetters = char => {\n    const alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    const indexTemp = alphabet.indexOf(char.toLowerCase());\n    if (indexTemp === -1) {\n      return \"Invalid character\";\n    }\n    let result = \"\";\n    for (let i = 5; i > 0; i--) {\n      result += alphabet[(indexTemp - i + alphabet.length) % alphabet.length];\n    }\n    result += char.toLowerCase();\n    for (let i = 1; i <= 5; i++) {\n      result += alphabet[(indexTemp + i) % alphabet.length];\n    }\n    return result;\n  };\n  const updateText = () => {\n    const char = originalText[index];\n    const chars = getSurroundingLetters(char);\n    const nextChar = chars[Math.floor(Math.random() * chars.length)];\n    setDisplayText(prevText => {\n      const newTextArray = prevText.split('');\n      newTextArray[index] = nextChar;\n      return newTextArray.join('');\n    });\n    if (nextChar === char) {\n      setIndex(prevIndex => prevIndex + 1);\n    }\n  };\n  useEffect(() => {\n    if (index < originalText.length) {\n      const timeoutId = setTimeout(updateText, 10);\n      return () => clearTimeout(timeoutId);\n    }\n  }, [displayText, index]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      fontSize: '2rem',\n      fontFamily: 'monospace',\n      color: '#01D4F9'\n    },\n    children: displayText\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(RandomTextEffect, \"YUtlx7PE5xqi1wLfioXWBZgHCB8=\");\n_c = RandomTextEffect;\nexport default RandomTextEffect;\nvar _c;\n$RefreshReg$(_c, \"RandomTextEffect\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","RandomTextEffect","_s","originalText","displayText","setDisplayText","index","setIndex","getSurroundingLetters","char","alphabet","indexTemp","indexOf","toLowerCase","result","i","length","updateText","chars","nextChar","Math","floor","random","prevText","newTextArray","split","join","prevIndex","timeoutId","setTimeout","clearTimeout","style","fontSize","fontFamily","color","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Workspace/React/portfolio/src/components/nito/Nito.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst RandomTextEffect: React.FC = () => {\r\n  const originalText = \"nito\";\r\n  const [displayText, setDisplayText] = useState(\"----\");\r\n  const [index, setIndex] = useState(0);\r\n\r\n  const getSurroundingLetters = (char: string): string => {\r\n    const alphabet = \"abcdefghijklmnopqrstuvwxyz\";\r\n    const indexTemp = alphabet.indexOf(char.toLowerCase());\r\n\r\n    if (indexTemp === -1) {\r\n      return \"Invalid character\";\r\n    }\r\n\r\n    let result = \"\";\r\n\r\n    for (let i = 5; i > 0; i--) {\r\n      result += alphabet[(indexTemp - i + alphabet.length) % alphabet.length];\r\n    }\r\n\r\n    result += char.toLowerCase();\r\n\r\n    for (let i = 1; i <= 5; i++) {\r\n      result += alphabet[(indexTemp + i) % alphabet.length];\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  const updateText = () => {\r\n    const char = originalText[index];\r\n    const chars = getSurroundingLetters(char);\r\n    const nextChar = chars[Math.floor(Math.random() * chars.length)];\r\n\r\n    setDisplayText((prevText) => {\r\n      const newTextArray = prevText.split('');\r\n      newTextArray[index] = nextChar;\r\n      return newTextArray.join('');\r\n    });\r\n\r\n    if (nextChar === char) {\r\n      setIndex((prevIndex) => prevIndex + 1);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (index < originalText.length) {\r\n      const timeoutId = setTimeout(updateText, 10);\r\n      return () => clearTimeout(timeoutId);\r\n    }\r\n  }, [displayText, index]);\r\n\r\n  return (\r\n    <div style={{ fontSize: '2rem', fontFamily: 'monospace', color: '#01D4F9' }}>\r\n      {displayText}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RandomTextEffect;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,gBAA0B,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvC,MAAMC,YAAY,GAAG,MAAM;EAC3B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,MAAM,CAAC;EACtD,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EAErC,MAAMW,qBAAqB,GAAIC,IAAY,IAAa;IACtD,MAAMC,QAAQ,GAAG,4BAA4B;IAC7C,MAAMC,SAAS,GAAGD,QAAQ,CAACE,OAAO,CAACH,IAAI,CAACI,WAAW,CAAC,CAAC,CAAC;IAEtD,IAAIF,SAAS,KAAK,CAAC,CAAC,EAAE;MACpB,OAAO,mBAAmB;IAC5B;IAEA,IAAIG,MAAM,GAAG,EAAE;IAEf,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC1BD,MAAM,IAAIJ,QAAQ,CAAC,CAACC,SAAS,GAAGI,CAAC,GAAGL,QAAQ,CAACM,MAAM,IAAIN,QAAQ,CAACM,MAAM,CAAC;IACzE;IAEAF,MAAM,IAAIL,IAAI,CAACI,WAAW,CAAC,CAAC;IAE5B,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC3BD,MAAM,IAAIJ,QAAQ,CAAC,CAACC,SAAS,GAAGI,CAAC,IAAIL,QAAQ,CAACM,MAAM,CAAC;IACvD;IAEA,OAAOF,MAAM;EACf,CAAC;EAED,MAAMG,UAAU,GAAGA,CAAA,KAAM;IACvB,MAAMR,IAAI,GAAGN,YAAY,CAACG,KAAK,CAAC;IAChC,MAAMY,KAAK,GAAGV,qBAAqB,CAACC,IAAI,CAAC;IACzC,MAAMU,QAAQ,GAAGD,KAAK,CAACE,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGJ,KAAK,CAACF,MAAM,CAAC,CAAC;IAEhEX,cAAc,CAAEkB,QAAQ,IAAK;MAC3B,MAAMC,YAAY,GAAGD,QAAQ,CAACE,KAAK,CAAC,EAAE,CAAC;MACvCD,YAAY,CAAClB,KAAK,CAAC,GAAGa,QAAQ;MAC9B,OAAOK,YAAY,CAACE,IAAI,CAAC,EAAE,CAAC;IAC9B,CAAC,CAAC;IAEF,IAAIP,QAAQ,KAAKV,IAAI,EAAE;MACrBF,QAAQ,CAAEoB,SAAS,IAAKA,SAAS,GAAG,CAAC,CAAC;IACxC;EACF,CAAC;EAED7B,SAAS,CAAC,MAAM;IACd,IAAIQ,KAAK,GAAGH,YAAY,CAACa,MAAM,EAAE;MAC/B,MAAMY,SAAS,GAAGC,UAAU,CAACZ,UAAU,EAAE,EAAE,CAAC;MAC5C,OAAO,MAAMa,YAAY,CAACF,SAAS,CAAC;IACtC;EACF,CAAC,EAAE,CAACxB,WAAW,EAAEE,KAAK,CAAC,CAAC;EAExB,oBACEN,OAAA;IAAK+B,KAAK,EAAE;MAAEC,QAAQ,EAAE,MAAM;MAAEC,UAAU,EAAE,WAAW;MAAEC,KAAK,EAAE;IAAU,CAAE;IAAAC,QAAA,EACzE/B;EAAW;IAAAgC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEV,CAAC;AAACrC,EAAA,CAxDID,gBAA0B;AAAAuC,EAAA,GAA1BvC,gBAA0B;AA0DhC,eAAeA,gBAAgB;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}